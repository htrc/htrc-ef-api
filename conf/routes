# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

### NoDocs ###
GET   /docs/swagger-ui/*file        controllers.Assets.at(path: String = "/public/lib/swagger-ui", file: String)

### NoDocs ###
GET   /assets/*file                 controllers.Assets.versioned(path = "/public", file: Asset)

#GET     /swagger.json                   controllers.Assets.at(path = "/public", file = "swagger.json")

GET     /health/liveness                controllers.HealthController.livenessCheck
GET     /health/readiness               controllers.HealthController.readinessCheck

GET     /volumes/:cleanId               controllers.EfController.getVolume(cleanId, pos: Boolean ?= true, fields: Option[String] ?= None)
HEAD    /volumes/:cleanId               controllers.EfController.checkVolume(cleanId)
GET     /volumes/:cleanId/metadata      controllers.EfController.getVolumeMetadata(cleanId, fields: Option[String] ?= None)
GET     /volumes/:cleanId/pages         controllers.EfController.getVolumePages(cleanId, seq: Option[String] ?= None, pos: Boolean ?= true, fields: Option[String] ?= None)
POST    /worksets                       controllers.EfController.createWorkset()
GET     /worksets/:id                   controllers.EfController.getWorkset(id)
DELETE  /worksets/:id                   controllers.EfController.deleteWorkset(id)
GET     /worksets/:id/volumes           controllers.EfController.getWorksetVolumes(id, pos: Boolean ?= true, fields: Option[String] ?= None)
GET     /worksets/:id/volumes/aggregated    controllers.EfController.getWorksetVolumesAggregated(id, fields: Option[String] ?= None)
GET     /worksets/:id/metadata          controllers.EfController.getWorksetVolumesMetadata(id, fields: Option[String] ?= None)
